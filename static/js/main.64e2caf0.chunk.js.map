{"version":3,"sources":["utils/nanoid.js","components/Form/Form.styled.js","components/Form/Form.jsx","components/App/App.styled.js","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/App/App.jsx","index.js"],"names":["nanoid","customAlphabet","FormEl","Input","TitleInput","Button","Form","data","onSubmit","useState","name","setName","number","setNumber","reset","checkContact","contacts","obj","normalizedName","toLowerCase","find","contact","includes","e","preventDefault","id","compare","alert","type","value","pattern","onChange","currentTarget","title","required","Container","TitleMain","TitleBook","List","Item","ButtonDel","ContactsList","onDeleteContact","map","onClick","Label","Filter","App","JSON","parse","window","localStorage","getItem","setContacts","filter","setFilter","useEffect","setItem","stringify","normalizedFilter","getVisibleContacts","contactId","state","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64e2caf0.chunk.js","sourcesContent":["import { customAlphabet } from 'nanoid';\nconst nanoid = customAlphabet('1234567890', 3);\nexport default nanoid;\n","import styled from '@emotion/styled/macro';\n\nexport const FormEl = styled.form`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Input = styled.input`\n  margin-left: 5px;\n  margin-right: 5px;\n  line-height: 10px;\n  font-size: 16px;\n  &:focus {\n    outline: none;\n    border-color: blue;\n  }\n`;\n\nexport const TitleInput = styled.h2``;\n\nexport const Button = styled.button`\n  margin-left: 5px;\n  background-color: white;\n  color: green;\n  outline: none;\n  border: 1px dashed green;\n  padding: 3px;\n  &:hover,\n  :focus {\n    background-color: blue;\n    border: 1px dashed blue;\n    color: white;\n  }\n`;\n","import { useState } from 'react';\nimport nanoid from '../../utils/nanoid.js';\nimport { FormEl, Input, TitleInput, Button, } from './Form.styled.js';\n\nexport default function Form({ data, onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const obj = {\n      id: nanoid(),\n      name,\n      number,\n    };\n    const compare = checkContact(data, obj)\n    if (compare) {\n      alert(`${compare.name} is already in contacts`)\n      return reset();\n    }\n    onSubmit(obj);\n    reset();\n  }\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  }\n\n  const checkContact = (contacts, obj) => {\n    const { name } = obj;\n    const normalizedName = name.toLowerCase();\n    return contacts.find(contact => contact.name.toLowerCase().includes(normalizedName))\n  }\n\n  return (\n    <FormEl onSubmit={handleSubmit}>\n      <TitleInput>Name</TitleInput>\n      <Input\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        onChange={(e) => setName(e.currentTarget.value)}\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n      />\n      <TitleInput>Number</TitleInput>\n      <Input\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        onChange={(e) => setNumber(e.currentTarget.value)}\n        value={number}\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        required\n      />\n      <Button type=\"submit\">Add contact</Button>\n    </FormEl>\n  )\n}\n\n\n\n\n\n\n\n\n","import styled from '@emotion/styled/macro';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const TitleMain = styled.h1`\n  margin-bottom: 15px;\n`;\n\nexport const TitleBook = styled.h2`\n  margin-top: 10px;\n  margin-bottom: 10px;\n`;\n","import styled from '@emotion/styled/macro';\n\nexport const List = styled.ol`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin-top: 10px;\n`;\n\nexport const Item = styled.li`\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 12px;\n  padding: 10px;\n  border: 1px solid green;\n  &:not(:last-child) {\n    margin-bottom: 5px;\n  }\n`;\n\nexport const ButtonDel = styled.button`\n  margin-left: 5px;\n  background-color: white;\n  color: red;\n  outline: none;\n  border: 1px dashed red;\n  &:hover,\n  :focus {\n    background-color: blue;\n    border: 1px dashed blue;\n    color: white;\n  }\n`;\n","import React from 'react';\nimport { List, Item, ButtonDel } from './ContactsList.styled.js'\n\nconst ContactsList = ({ contacts, onDeleteContact }) => {\n    return (\n        <List>\n            {contacts.map(({ id, name, number }) => (\n                <Item key={id} >{name}: {number}\n                    <ButtonDel type=\"button\" onClick={() => onDeleteContact(id)}>Delete</ButtonDel>\n                </Item>\n            ))}\n        </List>\n    )\n}\n\nexport default ContactsList\n","import styled from '@emotion/styled/macro';\n\nexport const Input = styled.input`\n  line-height: 10px;\n  font-size: 16px;\n  &:focus {\n    outline: none;\n    border-color: blue;\n  }\n`;\n\nexport const Label = styled.label`\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 12px;\n  display: flex;\n  align-items: center;\n`;\n","import React from 'react';\nimport { Input, Label } from './Filter.styled.js';\n\nconst Filter = ({ onChange, value }) => {\n  return (\n    <Label>\n            Find Your Contact =>\n      <Input type=\"text\"  value={value} onChange={onChange} />\n    </Label>\n  )\n}\n\nexport default Filter\n","import { useState, useEffect } from 'react';\nimport Form from '../Form/Form';\nimport { Container, TitleMain, TitleBook, } from './App.styled.js'\nimport ContactsList from '../ContactsList/ContactsList';\nimport Filter from '../Filter/Filter';\n\n\n\nexport default function App () {\n  const [contacts, setContacts] = useState(()=>{\n    return JSON.parse(window.localStorage.getItem('contacts')) ?? [];\n  });\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n   const deleteContact = contactId => {\n    setContacts((state) => state.filter(contact=> contact.id !== contactId)\n    )\n  }\n\n  const formSubmit = (data) => {\n    setContacts([...contacts, data]);\n  }\n\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>contact.name.toLowerCase().includes(normalizedFilter))\n  }\n\n  return (\n    <Container>\n      <TitleMain>Phonebook</TitleMain>\n      <Form onSubmit={formSubmit} data={contacts} />\n      <TitleBook>Contacts</TitleBook>\n      <Filter onChange={(e) => setFilter(e.currentTarget.value)} value={filter}/>\n      <ContactsList contacts={getVisibleContacts()} onDeleteContact={deleteContact} />\n    </Container>\n  )\n}\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App.jsx';\nimport './utils/nanoid.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}